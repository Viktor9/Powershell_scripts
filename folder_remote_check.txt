#Create the Key and the file where you store the password
#Key is 128 bit 8x16 
#Create, fill with random 16 numbers between 1-255: 
$Key128 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16) 
$Secure = Read-Host -AsSecureString 
$Encrypted = ConvertFrom-SecureString -SecureString $Secure -Key $Key128 
$Encrypted | Set-Content C:\folder\subfolder\file128.txt 

#Get back the date 
$TheString = Get-Content C:\folder\subfolder\file128.txt 
$Secure2 = ConvertTo-SecureString -String $TheString -Key $Key128 
$Secure2.Length #you can check the length some connections don't like when the password is more than 256 characters


#Checking the folders with credentials. You don't have to type in your username and password

$username = "domain\username"
#should be the same key you created earlier
$Key128 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
$TheString = Get-Content C:\folder\subfolder\file128.txt
$password = ConvertTo-SecureString -String $TheString -Key $Key128

$cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $password

#Entering PS sesson
Enter-PSSession -ComputerName <serversFQDNorIP> -Credential $cred

#array if you want to check more folders separate with coma is the array has more than one value
#checks the E: drives folder on the remote server
$folders =@(
'E$\folder\subfolder\*'
)

#$folders
foreach ($folder in $folders){

#checks the folder
$tested_folder = Test-Path -Path $folder


if ($tested_folder -eq $false){
Write-Host Folder is empty!}
else {Write-Host Folder is NOT empty! $folder}

}

#Exiting form the PS session
Exit-PSSession
